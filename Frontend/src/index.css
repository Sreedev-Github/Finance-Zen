@import url('https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;


:root {
  font-family: "Montserrat", sans-serif;
  line-height: 1.5;
  font-weight: 400;

  color-scheme: light dark;
  color: rgba(0, 0, 0, 1);
  background-color: #fff;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;

  --radial-gradient-background: 250, 250, 250;
  --solid-color-background: 15, 15, 15;
  --overlay-color: 255, 255, 255;
}


@layer components {
  .radial-gradient {
    background: radial-gradient(
            circle at 50% 0%,
            rgba(var(--radial-gradient-background), 0.05) 0%,
            transparent 60%
        )
        rgba(var(--solid-color-background), 1);
  }
  
  .linear-mask {
    mask-image: linear-gradient(
        -75deg,
        white calc(var(--x) + 20%),
        transparent calc(var(--x) + 30%),
        white calc(var(--x) + 100%)
    );
    -webkit-mask-image: linear-gradient(
        -75deg,
        white calc(var(--x) + 20%),
        transparent calc(var(--x) + 30%),
        white calc(var(--x) + 100%)
    );
  }
  
  .linear-overlay {
    background-image: linear-gradient(
        -75deg,
        rgba(var(--overlay-color), 0.1) calc(var(--x) + 20%),
        rgba(var(--overlay-color), 0.5) calc(var(--x) + 25%),
        rgba(var(--overlay-color), 0.1) calc(var(--x) + 100%)
    );
    mask:
        linear-gradient(black, black) content-box,
        linear-gradient(black, black);
    -webkit-mask:
        linear-gradient(black, black) content-box,
        linear-gradient(black, black);
    mask-composite: exclude;
    -webkit-mask-composite: xor;
  }
  
}


.hamburger {
  cursor: pointer;
}

.hamburger input {
  display: none;
}

.hamburger svg {
  /* The size of the SVG defines the overall size */
  height: 3em;
  /* Define the transition for transforming the SVG */
  transition: transform 600ms cubic-bezier(0.4, 0, 0.2, 1);
}

.line {
  fill: none;
  stroke: black;
  stroke-linecap: round;
  stroke-linejoin: round;
  stroke-width: 3;
  /* Define the transition for transforming the Stroke */
  transition: stroke-dasharray 600ms cubic-bezier(0.4, 0, 0.2, 1),
              stroke-dashoffset 600ms cubic-bezier(0.4, 0, 0.2, 1);
}

.line-top-bottom {
  stroke-dasharray: 12 63;
}

.hamburger input:checked + svg {
  transform: rotate(-45deg);
}

.hamburger input:checked + svg .line-top-bottom {
  stroke-dasharray: 20 300;
  stroke-dashoffset: -32.42;
}

/* Chart */
@media screen and (max-width: 767px) {

  .dashboard-wrapper{
    width: auto;
    height: auto;
    margin: 0 auto;
  }

  .dashboardBox {
    width: 90%;
    height: fit-content;
    margin: 0 auto;
  }
}

@media screen and (max-width: 390px) {
  .dashboardBox {
    width: 80%;
    margin: 0 auto;
  }
}

@media screen and (max-width:360px) {
  .dashboardBox {
    width: 70%;
    margin: 0 auto;
  }
}

/* Alert */
.alert {
  position: fixed;
  top: 20px;
  right: -300px; /* Start off-screen */
  background-color: #4caf50; /* Default green */
  color: white;
  padding: 15px;
  border-radius: 5px;
  z-index: 1000;
  transition: right 0.5s ease-in-out;
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.alert.show {
  right: 20px; /* Slide in */
}

.alert.error {
  background-color: #f44336; /* Red for errors */
}

.close-btn {
  background: none;
  border: none;
  color: white;
  cursor: pointer;
  font-size: 16px;
  margin-left: 10px;
}


